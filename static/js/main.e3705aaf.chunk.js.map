{"version":3,"sources":["digipant.PNG","job.PNG","eggxact.PNG","twitter.PNG","shoppingcart.PNG","components/Work.js","components/About.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Work","className","to","href","target","src","require","alt","React","Component","About","style","fontWeight","Contact","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,wICqC5BC,E,iLAhCP,OACI,yBAAKC,UAAU,aACX,4CACA,yBAAKA,UAAU,WACX,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,yBAAKD,UAAU,gBACX,uBAAGA,UAAU,WAAWE,KAAK,2CAA2CC,OAAO,UAC3E,yBAAKC,IAAKC,EAAQ,IAAoBC,IAAI,cAE9C,uBAAGN,UAAU,MAAME,KAAK,qCAAqCC,OAAO,UAChE,yBAAKC,IAAKC,EAAQ,IAAeC,IAAI,gBAEzC,uBAAGN,UAAU,UAAUE,KAAK,yCAAyCC,OAAO,UACxE,yBAAKC,IAAKC,EAAQ,IAAmBC,IAAI,aAE7C,uBAAGN,UAAU,UAAUE,KAAK,uDAAuDC,OAAO,UACtF,yBAAKC,IAAKC,EAAQ,IAAmBC,IAAI,aAE7C,uBAAGN,UAAU,eAAeE,KAAK,6CAA6CC,OAAO,UACjF,yBAAKC,IAAKC,EAAQ,IAAwBC,IAAI,wB,GA1BnDC,IAAMC,WCwCVC,E,iLAtCP,OACI,yBAAKT,UAAU,aACX,4CACA,yBAAKA,UAAU,WACX,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,yBAAKD,UAAU,SACX,iFACA,oSAKA,0GACA,wBAAIU,MAAO,CAACC,WAAY,MAAxB,kBAA6C,6BACzC,kCACG,6BADH,OAEI,6BAFJ,QAGK,6BAHL,UAIO,6BAJP,UAKO,6BALP,aAMU,6BANV,aAOU,6BAPV,eAQY,6BARZ,eASY,6BATZ,+B,GArBJJ,IAAMC,WCoBXI,E,iLAlBP,OACI,yBAAKZ,UAAU,aACX,4CACA,yBAAKA,UAAU,WACX,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,yBAAKD,UAAU,WACX,4BAAI,uBAAGE,KAAK,uDAAR,gC,GAbFK,IAAMC,WCiBbK,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjB,IACjC,kBAAC,IAAD,CAAOe,KAAK,SAASE,UAAWP,IAChC,kBAAC,IAAD,CAAOK,KAAK,WAAWE,UAAWJ,OCFtBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e3705aaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/digipant.1a9e2600.PNG\";","module.exports = __webpack_public_path__ + \"static/media/job.49d67881.PNG\";","module.exports = __webpack_public_path__ + \"static/media/eggxact.5df154df.PNG\";","module.exports = __webpack_public_path__ + \"static/media/twitter.b21c841f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/shoppingcart.1f4b887d.PNG\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Work extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>ELISE BRENNA</h2>\r\n                <div className=\"nav-bar\">\r\n                    <nav>\r\n                        <Link to=\"/\">WORK</Link> \r\n                        <Link to=\"/about\">ABOUT</Link> \r\n                        <Link to=\"/contact\">CONTACT</Link> \r\n                    </nav>\r\n                </div>\r\n                <div className=\"work-gallery\">\r\n                    <a className=\"digipant\" href=\"https://github.com/EliseBrenna/pante-app\" target=\"_blank\">\r\n                        <img src={require(\"../digipant.PNG\")} alt=\"digipant\"/>\r\n                    </a>\r\n                    <a className=\"job\" href=\"https://github.com/EliseBrenna/job\" target=\"_blank\">\r\n                        <img src={require(\"../job.PNG\")} alt=\"jobbrowser\"/>\r\n                    </a>\r\n                    <a className=\"eggxact\" href=\"https://github.com/EliseBrenna/eggxact\" target=\"_blank\">\r\n                        <img src={require(\"../eggxact.PNG\")} alt=\"eggxact\"/>\r\n                    </a>\r\n                    <a className=\"twitter\" href=\"https://github.com/EliseBrenna/academy-twitter-clone\" target=\"_blank\">\r\n                        <img src={require(\"../twitter.PNG\")} alt=\"twitter\"/>\r\n                    </a>\r\n                    <a className=\"shoppingcart\" href=\"https://github.com/EliseBrenna/phone-store\" target=\"_blank\">\r\n                        <img src={require(\"../shoppingcart.PNG\")} alt=\"shoppingcart\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Work;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>ELISE BRENNA</h2>\r\n                <div className=\"nav-bar\">\r\n                    <nav>\r\n                        <Link to=\"/\">WORK</Link> \r\n                        <Link to=\"/about\">ABOUT</Link> \r\n                        <Link to=\"/contact\">CONTACT</Link> \r\n                    </nav>\r\n                </div>\r\n                <div className=\"about\">\r\n                    <h4>Elise is situated in the capital of Norway, Oslo.</h4>\r\n                    <h4>She graduated from Westerdals ACT in 2014 with a bachelor degree in Retail Design.\r\n                        For the next 8 years she worked in the fashion industry as a brand manager, before\r\n                        she decided to change her career and follow her other dream - web development\r\n                        and programming.\r\n                    </h4>\r\n                    <h4>In January 2020 she finished a 3 month accelerating program in JavaScript.</h4>\r\n                    <h4 style={{fontWeight: 600}}>Qualifications <br></br>\r\n                        <h4>\r\n                        Git<br></br>\r\n                        HTML<br></br>\r\n                        React<br></br>\r\n                        Node.js<br></br>\r\n                        Express<br></br>\r\n                        JavaScript<br></br>\r\n                        PostgreSQL<br></br>\r\n                        Browser APIs<br></br>\r\n                        CSS and SASS<br></br>\r\n                        RESTful Web Services\r\n                    </h4>\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>ELISE BRENNA</h2>\r\n                <div className=\"nav-bar\">\r\n                    <nav>\r\n                        <Link to=\"/\">WORK</Link> \r\n                        <Link to=\"/about\">ABOUT</Link> \r\n                        <Link to=\"/contact\">CONTACT</Link> \r\n                    </nav>\r\n                </div>\r\n                <div className=\"contact\">\r\n                    <h4><a href=\"mailto: elisebrenna@gmail.com? subject=subject text\">elisebrenna@gmail.com</a></h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Work from './components/Work';\nimport About from './components/About';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Work} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}